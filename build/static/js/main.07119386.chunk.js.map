{"version":3,"sources":["components/NotFoundView.js","containers/PostView.js","components/Post.js","containers/PostListView.js","containers/ProgrammingPostListView.js","containers/BooksPostListView.js","containers/InternetPostListView.js","containers/ThoughtsPostListView.js","containers/AboutView.js","containers/ProjectView.js","containers/ContactView.js","components/Book.js","containers/BookshelfView.js","routes.js","containers/BaseLayout.js","App.js","serviceWorker.js","index.js"],"names":["NotFoundView","react_default","a","createElement","className","id","ReactMarkdown","require","PostView","state","article","_this2","this","articleSlug","props","match","params","getData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","concat","abrupt","sent","t0","setState","stop","apply","arguments","_ref2","_callee2","data","_context2","undefined","evalData","window","open","is_visible","components_NotFoundView","publishedDate","moment","published_date","format","htmlContent","content","title","header","footer","tags","articleHtml","headerSection","footerSection","style","color","fontStyle","marginBottom","escapeHtml","source","textAlign","fontWeight","fontSize","marginTop","tagSection","map","tag","NavLink","to","Divider","Button","onClick","handleTwitterBtnClick","Icon","name","React","Component","Post","date","href","slug","paddingTop","lead","PostListView","dataLoaded","articles","activePage","then","res","console","error","message","_this3","_this$state","posts","numPosts","filteredArticles","filter","length","paddingLeft","slice","components_Post","Math","ceil","Pagination","defaultActivePage","totalPages","onPageChange","event","handlePageChange","ProgrammingPostListView","BooksPostListView","InternetPostListView","ThoughtsPostListView","AboutView","ProjectView","ContactView","NormalBook","bookTitle","bookUrl","paddingBottom","GreatBook","BestBook","BookTitle","bookType","Book","book_type","amazon_url","BookshelfView","Loader","forEach","item","index","splice","bookHtml","components_Book","BaseRouter","Switch","Route","exact","path","component","BaseLayout","children","Grid","stackable","columns","Column","width","border","ReactGA","initialize","App","componentDidMount","pageview","location","pathname","search","componentDidUpdate","BrowserRouter","containers_BaseLayout","routes","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07119386.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFoundView() {\n  return (\n    <div className='ui container left aligned '>\n      <h1>404</h1>\n      <p id='about-text'>Page not found :(</p>\n    </div>\n  );\n}\n\nexport default NotFoundView;\n","import React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Divider, Button, Icon } from 'semantic-ui-react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { NavLink } from 'react-router-dom';\n\nimport NotFoundView from '../components/NotFoundView';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nclass PostView extends React.Component {\n  state = {\n    article: null\n  };\n\n  componentDidMount() {\n    const articleSlug = this.props.match.params.articleSlug;\n\n    const getData = async () => {\n      try {\n        return await axios.get(\n          `https://lukezsmith.herokuapp.com/api-site/blogposts/all/${articleSlug}/`\n          // `http://127.0.0.1:8000/api-site/blogposts/all/${articleSlug}/`\n        );\n      } catch (error) {\n        this.setState({ article: '404' });\n      }\n    };\n    const evalData = async () => {\n      const data = await getData();\n      if (data !== undefined) {\n        this.setState({ article: data });\n      }\n    };\n\n    evalData();\n  }\n\n  handleTwitterBtnClick() {\n    window.open('https://twitter.com/lukezsmith');\n  }\n\n  render() {\n    const { article } = this.state;\n    if (article === null) {\n      return null;\n    } else if (article === '404' || article.data.is_visible === false) {\n      return <NotFoundView />;\n    }\n\n    const publishedDate = moment(article.data.published_date).format(\n      'MMMM Do, YYYY'\n    );\n\n    const htmlContent = article.data.content;\n    const title = article.data.title;\n    const header = article.data.header;\n    const footer = article.data.footer;\n    const tags = article.data.tags;\n\n    let articleHtml = (\n      <div>\n        <NotFoundView />\n      </div>\n    );\n\n    let headerSection = null;\n    let footerSection = null;\n\n    if (header) {\n      headerSection = (\n        <div className='header-section'>\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              fontStyle: 'italic',\n              marginBottom: '1%'\n            }}\n          >\n            <ReactMarkdown escapeHtml={false} source={header}></ReactMarkdown>\n          </div>\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              textAlign: 'center',\n              fontWeight: '500',\n              fontSize: '1.2em'\n            }}\n          >\n            ~ ~ ~\n          </div>\n        </div>\n      );\n    }\n\n    if (footer) {\n      footerSection = (\n        <div className='footer-section'>\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              textAlign: 'center',\n              fontWeight: '500',\n              fontSize: '1.2em'\n            }}\n          >\n            ~ ~ ~\n          </div>\n\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              fontStyle: 'italic',\n              marginTop: '1%'\n            }}\n          >\n            <ReactMarkdown escapeHtml={false} source={footer}></ReactMarkdown>\n          </div>\n        </div>\n      );\n    }\n\n    let tagSection = null;\n    if (tags) {\n      tagSection = (\n        <div className='tag-section'>\n          {tags.map((tag) => (\n            <span>\n              <NavLink style={{ fontSize: '0.9em' }} to={`/tag/${tag}`}>\n                #{tag}{' '}\n              </NavLink>\n            </span>\n          ))}\n        </div>\n      );\n    }\n\n    if (article.data !== undefined) {\n      articleHtml = (\n        <div id='article-detail-content'>\n          <h1 className='content-title'>{title}</h1>\n          <p className='content-date'>{publishedDate}</p>\n          <div className='listrow'>\n            {headerSection}\n            <div className='content-content'>\n              {/* {ReactHtmlParser(htmlContent)} */}\n              <ReactMarkdown escapeHtml={false} source={htmlContent}></ReactMarkdown>\n              \n            </div>\n            <Divider />\n            {footerSection}\n            {tagSection}\n\n            <div className='twitter-btn'>\n              <Button onClick={this.handleTwitterBtnClick} className='btn'>\n                <span>\n                  <Icon name='twitter'></Icon>\n                </span>\n                <span>Get in touch!</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return <div>{articleHtml}</div>;\n  }\n}\n\nexport default PostView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\nimport { Divider } from 'semantic-ui-react';\n\nclass Post extends React.Component {\n  render() {\n    const { data } = this.props;\n\n    const date = moment(data.published_date).format('MMMM Do, YYYY');\n    return (\n      <div id='post-section'>\n        <div>\n          <a className='post-header' href={`/post/${data.slug}`}>\n            {data.title}\n          </a>\n          <p\n            style={{\n              fontWeight: '500',\n              color: '#999',\n              paddingTop: '1%'\n            }}\n          >\n            Posted on {date}\n          </p>\n          <div> {data.lead}</div>\n          <br />\n          <Divider />\n        </div>\n      </div>\n    );\n  }\n}\nPost.propTypes = {\n  data: PropTypes.objectOf.isRequired\n};\nexport default Post;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass PostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/all/')\n        // .get('http://127.0.0.1:8000/api-site/blogposts/all/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article) => (\n                <Post data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default PostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass ProgrammingPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/programming/')\n        // .get('http://127.0.0.1:8000/api-site/blogposts/programming/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article) => (\n                <Post data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default ProgrammingPostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass BooksPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/books/')\n        // .get('http://127.0.0.1:8000/api-site/blogposts/books/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article) => (\n                <Post data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default BooksPostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass InternetPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/internet/')\n        // .get('http://127.0.0.1:8000/api-site/blogposts/internet/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article) => (\n                <Post data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default InternetPostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass ThoughtsPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/thoughts/')\n        // .get('http://127.0.0.1:8000/api-site/blogposts/thoughts/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article) => (\n                <Post data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default ThoughtsPostListView;\n","/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction AboutView() {\n  return (\n    <div id='about-section'>\n      <h1>About me</h1>\n\n      <div>\n        Hi there! My name is Luke. I mainly write code, but I also try to write\n        words. The thing I care about most is human development, so I think a\n        lot about freedom of information, building ambitious things and the\n        originality that's required to envision the future.\n      </div>\n\n      <div>\n        Currently, I'm a Computer Science student at the University of Durham,\n        where I'm mainly focused on Machine Learning. Aside from my studies, I\n        tend to build side projects which can be found at{' '}\n        <NavLink to='/projects'>/projects.</NavLink>\n      </div>\n      <div>\n        When I'm not studying or programming, I'm usually trying to find\n        interesting things to think about. <br />I usually find these through\n        books, and I'll use this site to post about interesting ideas that I\n        read about.\n      </div>\n\n      <div>\n        With the internet making a lot of information accessible to many people,\n        a principle belief of mine is that innovation favours originality.{' '}\n        <br /> One of the best ways of cultivating originality is reading\n        interesting things that other people aren't, and this is something that\n        I try to do a lot. <br />\n        I'll try to publish some of the weird thoughts and things I come across\n        on this blog.\n      </div>\n\n      <div>\n        I'll update this page sporadically, so at any time parts may be\n        outdated.\n      </div>\n\n      <div>\n        <h3>Opinions</h3>\n        <ul className='about-list'>\n          <i>\n            &lt;I'll update this part very shortly, I need some time to think\n            about this&gt;\n          </i>\n        </ul>\n      </div>\n\n      <div>\n        <h3>Interests</h3>\n        <ul className='about-list'>\n          <li>Applications of Deep Learning</li>\n          <li>Community/Institution Systems for fostering innovation </li>\n          <li>The future of books (reading technology)</li>\n          <li>The future of information in general</li>\n          <li>Information validation</li>\n          <li>Applications of Blockchain (or is it another trend)</li>\n          <li>Space exploration</li>\n          <li>The future</li>\n          <li>Books</li>\n        </ul>\n      </div>\n\n      <div>\n        <h3>What this blog is</h3>\n        <div>\n          This blog is mainly a tool for me to think more about things that\n          matter.\n        </div>\n        <div>\n          For as long as I remember I've kept a notebook of thoughts that come\n          to me at any given moment. However, I rarely go back to those thoughts\n          and they sit there wasting away in a drawer that I'll not open for\n          months at a time.\n        </div>\n        This blog allows me to explore a subset of my thoughts in a more\n        profound way, potentially allowing me to refine my worldviews or develop\n        new interesting ideas.\n        {/* One benefit of this open form of exploration and learning is the fact that the blog posts could be read and therefore require more effort than the thoughts confined to my dust-lined notebooks.  */}\n      </div>\n    </div>\n  );\n}\n\nexport default AboutView;\n","import React from 'react';\n\nfunction ProjectView() {\n  return (\n    <div id='project-section'>\n      <h1>Projects</h1>\n      <div>\n        The majority of my projects can be found on my{' '}\n        <a\n          style={{ fontWeight: 'bold', color: '#385e94' }}\n          href='https://github.com/lukezsmith'\n        >\n          GitHub\n        </a>\n        .\n      </div>\n      <div>\n        I'm currently working on some exciting projects which I'll post here\n        soon.\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectView;\n","import React from 'react';\n\nfunction ContactView() {\n  return (\n    <div id='contact-section'>\n      <h1>Contact</h1>\n\n      <div>\n        The best place to catch me is on Twitter at{' '}\n        <b>\n          <a href='https://twitter.com/lukezsmith'>@lukezsmith</a>\n        </b>\n      </div>\n      <div>\n        Alternatively, here is a list of my social accounts:\n        <ul id='social-list'>\n          <li>\n            <b>\n              <a href='https://github.com/lukezsmith/'>Github</a>\n            </b>\n          </li>\n          <li>\n            <b>\n              <a href='https://www.linkedin.com/in/luke-smith-a47931168/'>\n                LinkedIn\n              </a>\n            </b>\n          </li>\n          <li>\n            <b>\n              <a href='https://www.instagram.com/lukezachsmith/'>Instagram</a>\n            </b>\n          </li>\n          <li>\n            <b>\n              <a href='https://www.goodreads.com/user/show/30861574-luke'>\n                Goodreads\n              </a>\n            </b>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NormalBook(props) {\n  const { bookTitle, bookUrl } = props;\n  return (\n    <div\n      style={{\n        paddingTop: '0.5%',\n        paddingBottom: '0.5%'\n      }}\n    >\n      <a href={bookUrl} style={{ color: '#424241', fontWeight: '450' }}>\n        {bookTitle}\n      </a>\n    </div>\n  );\n}\n\nfunction GreatBook(props) {\n  const { bookTitle, bookUrl } = props;\n  return (\n    <div style={{ paddingTop: '0.5%', paddingBottom: '0.5%' }}>\n      <a href={bookUrl} style={{ color: '#424241', fontWeight: 'bold' }}>\n        {bookTitle}\n      </a>\n    </div>\n  );\n}\n\nfunction BestBook(props) {\n  const { bookTitle, bookUrl } = props;\n  return (\n    <div style={{ paddingTop: '0.5%', paddingBottom: '0.5%' }}>\n      <a href={bookUrl} style={{ color: '#385e94', fontWeight: 'bold' }}>\n        {bookTitle}\n      </a>\n    </div>\n  );\n}\n\nfunction BookTitle(props) {\n  const { bookTitle } = props;\n  const { bookType } = props;\n  const { bookUrl } = props;\n  switch (bookType) {\n    case 'normal':\n      return <NormalBook bookUrl={bookUrl} bookTitle={bookTitle} />;\n    case 'great':\n      return <GreatBook bookUrl={bookUrl} bookTitle={bookTitle} />;\n    case 'best':\n      return <BestBook bookUrl={bookUrl} bookTitle={bookTitle} />;\n    default:\n      return (\n        <p>\n          <a className='book_a_tag' href={bookUrl}>\n            <NormalBook bookTitle={bookTitle} />\n          </a>\n        </p>\n      );\n  }\n}\n\nclass Book extends React.Component {\n  render() {\n    const { data } = this.props;\n    return (\n      <BookTitle\n        bookTitle={data.title}\n        bookType={data.book_type}\n        bookUrl={data.amazon_url}\n      />\n    );\n  }\n}\nBook.propTypes = {\n  data: PropTypes.objectOf.isRequired\n};\n\nNormalBook.propTypes = {\n  bookTitle: PropTypes.string.isRequired\n};\n\nGreatBook.propTypes = {\n  bookTitle: PropTypes.string.isRequired\n};\n\nBestBook.propTypes = {\n  bookTitle: PropTypes.string.isRequired\n};\n\nBookTitle.propTypes = {\n  bookTitle: PropTypes.string.isRequired,\n  bookType: PropTypes.string.isRequired,\n  bookUrl: PropTypes.string.isRequired\n};\nexport default Book;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Loader } from 'semantic-ui-react';\nimport Book from '../components/Book';\n\nclass BookshelfView extends React.Component {\n  state = {\n    articles: null\n  };\n\n  componentDidMount() {\n    const getData = async () => {\n      try {\n        return await axios.get(\n          'https://lukezsmith.herokuapp.com/api-site/books/books/'\n          // 'http://127.0.0.1:8000/api-site/books/books/'\n        );\n      } catch (error) {\n        this.setState({ articles: '404' });\n      }\n      return 0;\n    };\n    const evalData = async () => {\n      const data = await getData();\n      if (data !== undefined) {\n        this.setState({ articles: data });\n      } else {\n        this.setState({ articles: '404' });\n      }\n    };\n\n    evalData();\n  }\n\n  render() {\n    const { articles } = this.state;\n    if (articles === null) {\n      return (\n        <div>\n          <Loader>Loading</Loader>\n        </div>\n      );\n    }\n\n    articles.data.forEach((item, index) => {\n      if (item.is_visible === false) {\n        articles.data.splice(index, 1);\n      }\n    });\n\n    let bookHtml = {};\n    if (\n      articles.data !== undefined &&\n      articles.data !== '404' &&\n      articles.data.length !== 0 &&\n      articles.data[0].is_visible !== false\n    ) {\n      bookHtml = (\n        <div id='bookshelf-content'>\n          <h1>Bookshelf</h1>\n          <p id='lead-text'>\n            I love books and find it interesting to know what kinds of books\n            people are reading, so I thought i'd publish my own list.\n            <br />\n            <br />\n            This list features all of the books I feel have had an impact on me\n            in some way. You can find every book I've read on my{' '}\n            <a href='https://www.goodreads.com/user/show/30861574-luke'>\n              Goodreads\n            </a>\n            .\n            <br />\n            <br />\n            For the sake of organisation, I've decided to highlight those I\n            found above average in\n            <span style={{ fontWeight: 'bold' }}> bold</span> and outstanding\n            books in{' '}\n            <span style={{ color: '#385e94', fontWeight: 'bold' }}> blue</span>.\n            The list is ordered chronologically, with recent reads at the top.\n          </p>\n\n          <ul id='book-list'>\n            {articles.data.map((article) => (\n              <Book data={article} />\n            ))}\n          </ul>\n        </div>\n      );\n    } else {\n      bookHtml = (\n        <div id='project-section'>\n          <h1>Bookshelf</h1>\n          <p id='lead-text'>\n            I love books and find it interesting to know what kinds of books\n            people are reading, so I thought i'd publish my own list.\n            <br />\n            <br />\n            For the sake of organisation, I've decided to highlight those I\n            found above average in\n            <span style={{ fontWeight: 'bold' }}> bold</span> and outstanding\n            books in{' '}\n            <span style={{ color: '#385e94', fontWeight: 'bold' }}> blue</span>.\n            <br />\n            <br />\n            The list is ordered chronologically, with recent reads at the top.\n          </p>\n          <p>Oops! No books have been added yet, please check again later.</p>\n        </div>\n      );\n    }\n    return <div>{bookHtml}</div>;\n  }\n}\nexport default BookshelfView;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PostView from './containers/PostView';\nimport PostListView from './containers/PostListView';\nimport ProgrammingPostListView from './containers/ProgrammingPostListView';\nimport BooksPostListView from './containers/BooksPostListView';\nimport InternetPostListView from './containers/InternetPostListView';\nimport ThoughtsPostListView from './containers/ThoughtsPostListView';\nimport AboutView from './containers/AboutView';\nimport ProjectView from './containers/ProjectView';\nimport ContactView from './containers/ContactView';\nimport BookshelfView from './containers/BookshelfView';\nimport NotFoundView from './components/NotFoundView';\n\nconst BaseRouter = () => (\n  <div>\n    <Switch>\n      <Route exact path='/' component={PostListView}>\n        {' '}\n      </Route>\n      <Route path='/about/' component={AboutView}>\n        {' '}\n      </Route>\n      <Route path='/projects/' component={ProjectView}>\n        {' '}\n      </Route>\n      <Route path='/bookshelf/' component={BookshelfView}>\n        {' '}\n      </Route>\n      <Route path='/contact/' component={ContactView}>\n        {' '}\n      </Route>\n      <Route path='/post/:articleSlug/' component={PostView}>\n        {' '}\n      </Route>\n      <Route exact path='/tag/programming/' component={ProgrammingPostListView}>\n        {' '}\n      </Route>\n      <Route exact path='/tag/books/' component={BooksPostListView}>\n        {' '}\n      </Route>\n      <Route exact path='/tag/thoughts/' component={ThoughtsPostListView}>\n        {' '}\n      </Route>\n      <Route exact path='/tag/internet' component={InternetPostListView}>\n        {' '}\n      </Route>\n      <Route path='/*' component={NotFoundView}>\n        {' '}\n      </Route>\n    </Switch>\n  </div>\n);\nexport default BaseRouter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Grid, Button } from 'semantic-ui-react';\n\nclass BaseLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div id='main-section'>\n        <Grid id='main-grid' stackable columns={2}>\n          <Grid.Column id='sidebar-col' width={2}>\n            <NavLink style={{ border: 'none' }} to='/'>\n              <Button className='btn'>lukezsmith</Button>\n            </NavLink>\n            <ul id='navlinks'>\n              <li>\n                <NavLink to='/'>Posts</NavLink>\n              </li>\n              <li>\n                <NavLink to='/about'>About me</NavLink>\n              </li>\n              <li>\n                <NavLink to='/projects'>Projects</NavLink>\n              </li>\n              <li>\n                <NavLink to='/bookshelf'>Bookshelf</NavLink>\n              </li>\n              <li>\n                <NavLink to='/contact'>Contact</NavLink>\n              </li>\n            </ul>\n            <p id='categories-header'>Things that can be found on this site:</p>\n            <ul className='categories'>\n              <li>\n                Programming-related content:{' '}\n                <b>\n                  <NavLink to='/tag/programming'>#programming</NavLink>\n                </b>\n              </li>\n\n              <li>\n                All things books:{' '}\n                <b>\n                  <NavLink to='/tag/books'>#books</NavLink>\n                </b>\n              </li>\n\n              <li>\n                Cool things I come across on the internet:{' '}\n                <b>\n                  <NavLink to='/tag/internet'>#internet</NavLink>\n                </b>\n              </li>\n\n              <li>\n                Random thoughts and ideas I have:{' '}\n                <b>\n                  <NavLink to='/tag/thoughts'>#thoughts</NavLink>\n                </b>\n              </li>\n\n              <li>\n                For occasional updates, here's my{' '}\n                <b>\n                  <a href='http://eepurl.com/gb_zzf'>newsletter</a>\n                </b>\n              </li>\n            </ul>\n          </Grid.Column>\n          <Grid.Column id='content-col' width={13}>\n            {children}\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\nBaseLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired\n};\n\nexport default BaseLayout;\n","/* eslint-disable prettier/prettier */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport BaseRouter from './routes';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport BaseLayout from './containers/BaseLayout';\n\nReactGA.initialize('UA-142802186-1');\n\nclass App extends Component {\n\tcomponentDidMount = () => {\n\t\tReactGA.pageview(window.location.pathname + window.location.search);\n\t};\n\n\tcomponentDidUpdate = () =>\n\t\tReactGA.pageview(window.location.pathname + window.location.search);\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<Router>\n\t\t\t\t\t<BaseLayout>\n\t\t\t\t\t\t<BaseRouter />\n\t\t\t\t\t</BaseLayout>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}